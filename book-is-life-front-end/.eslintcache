[{"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\index.js":"1","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\App\\index.js":"2","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\reducers\\index.js":"3","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Router\\index.js":"4","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\reducers\\posts.js":"5","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\HomePage\\HomePage.js":"6","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\HomePage\\HomePageStyles.js":"7","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\LoginPage\\LoginPage.js":"8","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\SignupPage\\SignupPage.js":"9","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\LoginPage\\LoginPageStyles.js":"10","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\SignupPage\\SignupPageStyles.js":"11","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Components\\Book Simple\\BookSimple.js":"12","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Components\\CadastroCliente\\CadastroCliente.js":"13","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Components\\CadastroCliente\\CadastroClienteStyles.js":"14"},{"size":196,"mtime":1611786794815,"results":"15","hashOfConfig":"16"},{"size":1335,"mtime":1611786794809,"results":"17","hashOfConfig":"16"},{"size":281,"mtime":1611786794815,"results":"18","hashOfConfig":"16"},{"size":827,"mtime":1611786794814,"results":"19","hashOfConfig":"16"},{"size":699,"mtime":1611786794816,"results":"20","hashOfConfig":"16"},{"size":2879,"mtime":1611786794811,"results":"21","hashOfConfig":"16"},{"size":1155,"mtime":1611786794811,"results":"22","hashOfConfig":"16"},{"size":3259,"mtime":1611786794813,"results":"23","hashOfConfig":"16"},{"size":19735,"mtime":1611786794814,"results":"24","hashOfConfig":"16"},{"size":956,"mtime":1611786794813,"results":"25","hashOfConfig":"16"},{"size":1517,"mtime":1611786794815,"results":"26","hashOfConfig":"16"},{"size":1927,"mtime":1611786794809,"results":"27","hashOfConfig":"16"},{"size":7902,"mtime":1611794468881,"results":"28","hashOfConfig":"16"},{"size":342,"mtime":1611786794810,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1bez0q7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\index.js",[],["60","61"],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\App\\index.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\reducers\\index.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Router\\index.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\reducers\\posts.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\HomePage\\HomePage.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\HomePage\\HomePageStyles.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\LoginPage\\LoginPage.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\SignupPage\\SignupPage.js",["62"],"import React, {Component} from \"react\";\r\nimport * as SPS from \"./SignupPageStyles\";\r\nimport {Button,TextField} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from '../Router';\r\nimport {connect} from \"react-redux\";\r\nimport InputMask from \"react-input-mask\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Cards from 'react-credit-cards';\r\nimport 'react-credit-cards/es/styles-compiled.css';\r\nimport axios from \"axios\";\r\nimport CadastroCliente from \"../Components/CadastroCliente/CadastroCliente\"\r\n\r\n\r\nclass SignupPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentStep: 1,\r\n            email: \"\",\r\n            senha: \"\",\r\n            nomeCliente: \"\",\r\n            dtNascimento: \"\",\r\n            cpf: \"\",\r\n            testeSenha: \"\",\r\n            tipoTelefone: \"\",\r\n            telefone: \"\",\r\n            mostrarSenha: false,\r\n            genero: \"\",\r\n            descricaoEndereco: \"\",\r\n            tipoLogradouro: \"\",\r\n            cep: \"\",\r\n            logradouro: \"\",\r\n            bairro: \"\",\r\n            numero: \"\",\r\n            cidade: \"\",\r\n            uf: \"\",\r\n            complemento: \"\",\r\n            tipoDeResidencia: \"\",\r\n            listaDeEndereco: [],\r\n            cvc: \"\",\r\n            expiry: \"\",\r\n            foco: \"\",\r\n            name: \"\",\r\n            number: \"\",\r\n            focused: \"\",\r\n            error: false,\r\n            errorMessage: {},\r\n            emailIsOk: false,\r\n            passwordIsOk: false,\r\n            isCell: true,\r\n        };\r\n    }\r\n\r\n\r\n    handleInputFocus = (e) => {\r\n        const target = e.target;\r\n        this.setState({\r\n            focused: target.name,\r\n        });\r\n    };\r\n\r\n    handleFieldChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n                [name]: value,\r\n            }, (() => {\r\n                if (name === \"cep\") {\r\n                    this.handleCepFillUp(this.state.cep)\r\n                } else if (name === \"email\") {\r\n                    this.emailIsValid(this.state.email)\r\n                } else if (name === \"senha\") {\r\n                    this.passwordIsValid(this.state.senha)\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        const target = e.target;\r\n\r\n        if (target.name === 'number') {\r\n            this.setState({\r\n                [target.name]: target.value.replace(/ /g, ''),\r\n            });\r\n        } else if (target.name === 'expiry') {\r\n            this.setState({\r\n                [target.name]: target.value.replace(/ |\\//g, ''),\r\n            });\r\n        } else {\r\n            this.setState({\r\n                [target.name]: target.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCallback(type, isValid) {\r\n        console.log(type, isValid);\r\n    }\r\n\r\n    handleDateChange = () => {\r\n        this.setState({teste: new Date()})\r\n        console.log(this.state.teste)\r\n    };\r\n\r\n    handleCepFillUp = (cepUnformaded) => {\r\n        const cep = cepUnformaded.replace(/[-_]/g, \"\")\r\n\r\n        console.log(cep, cep.length)\r\n        if (cep.length === 8) {\r\n            const request = axios.get(`http://viacep.com.br/ws/${cep}/json/`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n\r\n            })\r\n\r\n            request.then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    tipoLogradouro: response.data.logradouro.substr(0, response.data.logradouro.indexOf(\" \")),\r\n                    logradouro: response.data.logradouro.substr(response.data.logradouro.indexOf(\" \") + 1),\r\n                    bairro: response.data.bairro,\r\n                    cidade: response.data.localidade,\r\n                    uf: response.data.uf,\r\n                })\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n    handleMouseDownPassword = () => {\r\n        if (!this.state.mostrarSenha) {\r\n            this.setState({mostrarSenha: true});\r\n        } else {\r\n            this.setState({mostrarSenha: false});\r\n        }\r\n    };\r\n\r\n    handleAdressSave = (tipoDeEndereco) => {\r\n        const endereco = {\r\n            logradouro: this.state.logradouro,\r\n            cep: this.state.cep,\r\n            endereco: this.state.endereco,\r\n            bairro: this.state.bairro,\r\n            numero: this.state.numero,\r\n            complemento: this.state.complemento,\r\n            tipoDeEndereco: tipoDeEndereco,\r\n        }\r\n        this.setState({\r\n            adressList: [...this.state.listaDeEndereco, endereco],\r\n        })\r\n    }\r\n    _next = () => {\r\n        let currentStep = this.state.currentStep\r\n\r\n        currentStep = currentStep >= 2 ? 3 : currentStep + 1\r\n        this.setState({\r\n            currentStep: currentStep\r\n        })\r\n\r\n\r\n    }\r\n\r\n    _prev = () => {\r\n        let currentStep = this.state.currentStep\r\n        currentStep = currentStep <= 1 ? 1 : currentStep - 1\r\n        this.setState({\r\n            currentStep: currentStep\r\n        })\r\n    }\r\n\r\n\r\n    previousButton() {\r\n        let currentStep = this.state.currentStep;\r\n        if (currentStep !== 1) {\r\n            return (\r\n                <Button\r\n                    className=\"btn btn-secondary\"\r\n                    type=\"button\" onClick={this._prev}>\r\n                    Previous\r\n                </Button>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n    nextButton() {\r\n        let currentStep = this.state.currentStep;\r\n        if (currentStep < 3) {\r\n            return (\r\n                <Button\r\n                    className=\"btn btn-primary float-right\"\r\n                    type=\"button\" onClick={this._next}>\r\n                    Next\r\n                </Button>\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    emailIsValid = () => {\r\n        const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n\r\n        if (this.state.email !== undefined) {\r\n            if (regex.test(this.state.email)) {\r\n\r\n                this.setState({emailIsOk: true})\r\n            } else if (!regex.test(this.state.email)) {\r\n\r\n                this.setState({emailIsOk: false})\r\n            }\r\n        }\r\n        return this.state.emailIsOk;\r\n    }\r\n    passwordIsValid = (senha) => {\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/g;\r\n\r\n        if (senha !== undefined) {\r\n            if (regex.test(senha)) {\r\n                this.setState({passwordIsOk: true})\r\n            } else if (!regex.test(senha)) {\r\n                this.setState({passwordIsOk: false})\r\n            }\r\n        }\r\n        return this.state.passwordIsOk;\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            email,\r\n            senha,\r\n            nomeCliente,\r\n            cpf,\r\n            testeSenha,\r\n            telefone,\r\n            mostrarSenha,\r\n            genero,\r\n            name,\r\n            number,\r\n            expiry,\r\n            cvc,\r\n            focused,\r\n            descricaoEndereco,\r\n            tipoLogradouro,\r\n            tipoDeResidencia,\r\n            cep,\r\n            logradouro,\r\n            bairro,\r\n            numero,\r\n            cidade,\r\n            uf,\r\n            complemento,\r\n            tipoTelefone,\r\n            dtNascimento,\r\n            errorMessage,\r\n            emailIsOk,\r\n            passwordIsOk,\r\n        } = this.state;\r\n\r\n\r\n        return (\r\n            <>\r\n                <SPS.MainDiv>\r\n                    <Paper elevation={3}>\r\n                        <SPS.CustomHeader>\r\n                            <SPS.HomeLogo onClick={this.props.goToHomePage}><h3>aqui vai ficar o header</h3>\r\n                            </SPS.HomeLogo>\r\n                        </SPS.CustomHeader>\r\n                    </Paper>\r\n\r\n                    <SPS.SignupWrapper>\r\n                        <h4>Dados para cadastro</h4>\r\n\r\n                        <CadastroCliente\r\n                            currentStep={this.state.currentStep}\r\n                            handleFieldChange={this.handleFieldChange}\r\n                            nomeCliente={nomeCliente}\r\n                            email={email}\r\n                            emailError={emailIsOk}\r\n                            dtNascimento={dtNascimento}\r\n                            cpf={cpf}\r\n                            senha={senha}\r\n                            testeSenha={testeSenha}\r\n                            mostrarSenha={mostrarSenha}\r\n                            passwordIsOk={passwordIsOk}\r\n                            telefone={telefone}\r\n                            tipoTelefone={tipoTelefone}\r\n                            genero={genero}\r\n                            errorMessage={errorMessage}\r\n                            handleMouseDownPassword={this.handleMouseDownPassword}\r\n                        />\r\n                        <AdressDataFields\r\n                            currentStep={this.state.currentStep}\r\n                            handleFieldChange={this.handleFieldChange}\r\n                            descricaoEndereco={descricaoEndereco}\r\n                            tipoLogradouro={tipoLogradouro}\r\n                            tipoDeResidencia={tipoDeResidencia}\r\n                            cep={cep}\r\n                            logradouro={logradouro}\r\n                            bairro={bairro}\r\n                            numero={numero}\r\n                            cidade={cidade}\r\n                            uf={uf}\r\n                            complemento={complemento}\r\n                        />\r\n                        <CrediCardDataFields\r\n                            currentStep={this.state.currentStep}\r\n                            handleInputChange={this.handleInputChange}\r\n                            handleInputFocus={this.handleInputFocus}\r\n                            handleCallback={this.handleCallback}\r\n                            name={name}\r\n                            number={number}\r\n                            expiry={expiry}\r\n                            cvc={cvc}\r\n                            focused={focused}\r\n                        />\r\n\r\n                        {this.previousButton()}\r\n                        {this.nextButton()}\r\n\r\n                    </SPS.SignupWrapper>\r\n\r\n\r\n                </SPS.MainDiv>\r\n                <Paper elevation={3}>\r\n                    <SPS.Footer>\r\n                        <h3>aqui vai ficar o footer</h3>\r\n                    </SPS.Footer>\r\n                </Paper>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nfunction AdressDataFields(props) {\r\n    if (props.currentStep !== 2) {\r\n        return null\r\n    }\r\n    const logradouroList = [\r\n        \"Aeroporto\",\r\n        \"Alameda\",\r\n        \"Área\",\r\n        \"Avenida\",\r\n        \"Campo\",\r\n        \"Chácara\",\r\n        \"Colônia\",\r\n        \"Condomínio\",\r\n        \"Conjunto\",\r\n        \"Distrito\",\r\n        \"Esplanada\",\r\n        \"Estação\",\r\n        \"Estrada\",\r\n        \"Favela\",\r\n        \"Feira\",\r\n        \"Jardim\",\r\n        \"Ladeira\",\r\n        \"Lago\",\r\n        \"Lagoa\",\r\n        \"Largo\",\r\n        \"Loteamento\",\r\n        \"Morro\",\r\n        \"Núcleo\",\r\n        \"Parque\",\r\n        \"Passarela\",\r\n        \"Pátio\",\r\n        \"Praça\",\r\n        \"Quadra\",\r\n        \"Recanto\",\r\n        \"Residencial\",\r\n        \"Rodovia\",\r\n        \"Rua\",\r\n        \"Setor\",\r\n        \"Sítio\",\r\n        \"Travessa\",\r\n        \"Trecho\",\r\n        \"Trevo\",\r\n        \"Vale\",\r\n        \"Vereda\",\r\n        \"Via\",\r\n        \"Viaduto\",\r\n        \"Viela\",\r\n        \"Vila\"\r\n    ];\r\n    const tipoResidenciaList = [\"Casa\", \"Apartamento\", \"Residencial\"]\r\n    const ufList = [\r\n        {uf: \"AC\", nome: \"Acre\"},\r\n        {uf: \"AL\", nome: \"Alagoas\"},\r\n        {uf: \"AP\", nome: \"Amapá\"},\r\n        {uf: \"AM\", nome: \"Amazonas\"},\r\n        {uf: \"BA\", nome: \"Bahia\"},\r\n        {uf: \"CE\", nome: \"Ceará\"},\r\n        {uf: \"DF\", nome: \"Distrito Federal\"},\r\n        {uf: \"ES\", nome: \"Espírito Santo\"},\r\n        {uf: \"GO\", nome: \"Goiás\"},\r\n        {uf: \"MA\", nome: \"Maranhão\"},\r\n        {uf: \"MT\", nome: \"Mato Grosso\"},\r\n        {uf: \"MS\", nome: \"Mato Grosso do Sul\"},\r\n        {uf: \"MG\", nome: \"Minas Gerais\"},\r\n        {uf: \"PA\", nome: \"Pará\"},\r\n        {uf: \"PB\", nome: \"Paraíba\"},\r\n        {uf: \"PR\", nome: \"Paraná\"},\r\n        {uf: \"PE\", nome: \"Pernambuco\"},\r\n        {uf: \"PI\", nome: \"Piauí\"},\r\n        {uf: \"RJ\", nome: \"Rio de Janeiro\"},\r\n        {uf: \"RN\", nome: \"Rio Grande do Norte\"},\r\n        {uf: \"RS\", nome: \"Rio Grande do Sul\"},\r\n        {uf: \"RO\", nome: \"Rondônia\"},\r\n        {uf: \"RR\", nome: \"Roraima\"},\r\n        {uf: \"SC\", nome: \"Santa Catarina\"},\r\n        {uf: \"SP\", nome: \"São Paulo\"},\r\n        {uf: \"SE\", nome: \"Sergipe\"},\r\n        {uf: \"TO\", nome: \"Tocantins\"}\r\n    ];\r\n\r\n    return (\r\n        <SPS.AdressWrapper>\r\n            <SPS.AdressFieldsWrapper>\r\n                <h5>Endereço</h5>\r\n\r\n                <TextField\r\n                    onChange={props.handleFieldChange}\r\n                    name=\"descricaoEndereco\"\r\n                    type=\"text\"\r\n                    label=\"Descriçâo do Endereco\"\r\n                    required\r\n                    value={props.descricaoEndereco}\r\n                />\r\n\r\n                <InputMask\r\n                    mask=\"99999-999\"\r\n                    value={props.cep}\r\n                    onChange={props.handleFieldChange}\r\n                >\r\n                    <TextField\r\n                        name=\"cep\"\r\n                        type=\"text\"\r\n                        label=\"Cep\"\r\n                        required\r\n                    />\r\n                </InputMask>\r\n\r\n                <FormControl style={{minWidth: 120}}>\r\n                    <InputLabel>Tipo de Residencia</InputLabel>\r\n                    <Select\r\n                        name=\"tipoDeResidencia\"\r\n                        value={props.tipoDeResidencia}\r\n                        onChange={props.handleFieldChange}\r\n                        required\r\n                    >\r\n                        {tipoResidenciaList.map((item, index) => {\r\n                            return (\r\n                                <MenuItem key={index} value={item}>\r\n                                    <div key={index}>{item}</div>\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl style={{minWidth: 120}}>\r\n                    <InputLabel>Logradouro</InputLabel>\r\n                    <Select\r\n                        name=\"tipoLogradouro\"\r\n                        value={props.tipoLogradouro}\r\n                        onChange={props.handleFieldChange}\r\n                        required\r\n                    >\r\n                        {logradouroList.map((item, index) => {\r\n                            return (\r\n                                <MenuItem key={index} value={item}>\r\n                                    <div key={index}>{item}</div>\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n                <TextField\r\n                    onChange={props.handleFieldChange}\r\n                    name=\"logradouro\"\r\n                    type=\"text\"\r\n                    label=\"Endereço\"\r\n                    required\r\n                    value={props.logradouro}\r\n                />\r\n\r\n                <TextField\r\n                    onChange={props.handleFieldChange}\r\n                    name=\"numero\"\r\n                    type=\"number\"\r\n                    label=\"Numero\"\r\n                    required\r\n                    value={props.numero}\r\n                />\r\n\r\n                <TextField\r\n                    onChange={props.handleFieldChange}\r\n                    name=\"bairro\"\r\n                    type=\"text\"\r\n                    label=\"Bairro\"\r\n                    required\r\n                    value={props.bairro}\r\n                />\r\n\r\n                <TextField\r\n                    onChange={props.handleFieldChange}\r\n                    name=\"complemento\"\r\n                    type=\"text\"\r\n                    label=\"Complemento\"\r\n                    value={props.complemento}\r\n                />\r\n                <TextField\r\n                    onChange={props.handleFieldChange}\r\n                    name=\"cidade\"\r\n                    type=\"text\"\r\n                    label=\"Cidade\"\r\n                    value={props.cidade}\r\n                    required\r\n                />\r\n                <FormControl style={{minWidth: 120}}>\r\n                    <InputLabel>Estado</InputLabel>\r\n                    <Select\r\n                        name=\"uf\"\r\n                        value={props.uf}\r\n                        onChange={props.handleFieldChange}\r\n                        required\r\n                    >\r\n                        {ufList.map((item, index) => {\r\n                            return (\r\n                                <MenuItem key={index} value={item.uf}>\r\n                                    <div key={index}>{item.nome}</div>\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </SPS.AdressFieldsWrapper>\r\n\r\n        </SPS.AdressWrapper>\r\n    )\r\n}\r\n\r\nfunction CrediCardDataFields(props) {\r\n    if (props.currentStep !== 3) {\r\n        return null\r\n    }\r\n    return (\r\n        <SPS.CreditCardWrapper>\r\n            <Cards\r\n                locale={{valid: \"Valido até\"}}\r\n                placeholders={{name: \"Nome\"}}\r\n                cvc={props.cvc}\r\n                expiry={props.expiry}\r\n                focused={props.focused}\r\n                name={props.name}\r\n                number={props.number}\r\n                callback={props.handleCallback}\r\n            />\r\n\r\n            <SPS.CreditCardFieldsWrapper>\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    placeholder=\"Numero do Cartão\"\r\n                    onKeyUp={props.handleInputChange}\r\n                    onFocus={props.handleInputFocus}\r\n                    required\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Nome\"\r\n                    onKeyUp={props.handleInputChange}\r\n                    onFocus={props.handleInputFocus}\r\n                    required\r\n                />\r\n\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"expiry\"\r\n                    placeholder=\"MM/AA\"\r\n                    onKeyUp={props.handleInputChange}\r\n                    onFocus={props.handleInputFocus}\r\n                    required\r\n                />\r\n\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"cvc\"\r\n                    placeholder=\"CVC\"\r\n                    onKeyUp={props.handleInputChange}\r\n                    onFocus={props.handleInputFocus}\r\n                    required\r\n                />\r\n            </SPS.CreditCardFieldsWrapper>\r\n        </SPS.CreditCardWrapper>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        goToHomePage: () => dispatch(push(routes.HomePage)),\r\n        goToSignupPage: () => dispatch(push(routes.SignupPage)),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignupPage)","C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\LoginPage\\LoginPageStyles.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\SignupPage\\SignupPageStyles.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Components\\Book Simple\\BookSimple.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Components\\CadastroCliente\\CadastroCliente.js",[],"C:\\Users\\denni\\Documents\\les\\Book-Is-Life\\book-is-life-front-end\\src\\containers\\Components\\CadastroCliente\\CadastroClienteStyles.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":208,"column":29,"nodeType":"69","messageId":"70","endLine":208,"endColumn":30,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["74","75"],"no-global-assign","no-unsafe-negation",{"messageId":"76","fix":"77","desc":"78"},{"messageId":"79","fix":"80","desc":"81"},"removeEscape",{"range":"82","text":"83"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"84","text":"85"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[6177,6178],"",[6177,6177],"\\"]